from collections import defaultdict

# false = white side up
grid = defaultdict(lambda: False)
grid.update(
    {
        (x, y): True
        for (x, y) in [
            (15, -10),
            (-3, -7),
            (-14, 2),
            (0, 4),
            (-10, -1),
            (-7, -3),
            (4, -13),
            (-3, -12),
            (-9, 15),
            (1, -12),
            (-12, 7),
            (-10, 15),
            (-10, 7),
            (7, -13),
            (-11, 10),
            (0, 7),
            (5, -12),
            (11, -3),
            (12, -11),
            (14, -15),
            (14, -10),
            (-11, 12),
            (-1, -10),
            (-12, 9),
            (6, 4),
            (-7, 5),
            (-10, 6),
            (-10, 9),
            (16, -7),
            (7, 4),
            (-5, -11),
            (8, 0),
            (-7, 12),
            (-1, -1),
            (-1, -2),
            (-1, 7),
            (3, -13),
            (-2, 6),
            (-2, -12),
            (-16, 12),
            (-5, 10),
            (-9, -2),
            (10, -6),
            (1, 13),
            (-13, 2),
            (6, -8),
            (14, -5),
            (-14, 8),
            (14, -8),
            (-2, 16),
            (-5, -3),
            (-16, 1),
            (10, 4),
            (0, -14),
            (-7, 6),
            (-2, 11),
            (-7, 3),
            (-9, 0),
            (-15, 0),
            (8, -9),
            (4, 11),
            (3, 4),
            (15, -1),
            (-8, -6),
            (-7, -2),
            (5, -11),
            (-12, 1),
            (-15, 8),
            (-16, 8),
            (10, 2),
            (12, -12),
            (10, 3),
            (5, 6),
            (-6, 7),
            (0, 5),
            (9, -3),
            (-13, 11),
            (12, 4),
            (-13, 7),
            (-9, 11),
            (12, -1),
            (-14, 14),
            (-4, 4),
            (0, 12),
            (1, 0),
            (-2, -7),
            (-16, 7),
            (-9, -4),
            (-8, 16),
            (-4, -12),
            (-10, 14),
            (5, -15),
            (-3, -2),
            (5, -1),
            (-4, 11),
            (-16, 0),
            (-3, 1),
            (4, -16),
            (1, -4),
            (-9, 16),
            (4, 2),
            (-4, -9),
            (9, -8),
            (-2, -5),
            (10, -14),
            (-9, -3),
            (-1, -8),
            (7, -15),
            (-14, 12),
            (1, 6),
            (1, 1),
            (-9, -6),
            (2, -5),
            (12, -8),
            (6, -11),
            (-4, 0),
            (0, 14),
            (11, -4),
            (-3, -3),
            (8, -4),
            (-13, 0),
            (9, -1),
            (-13, 1),
            (9, -2),
            (7, -3),
            (-5, 8),
            (7, -2),
            (2, -8),
            (-10, 3),
            (1, -8),
            (-2, 7),
            (16, -15),
            (-2, 15),
            (1, -5),
            (13, 3),
            (-5, -8),
            (-15, 12),
            (11, -7),
            (-16, 3),
            (2, -11),
            (5, 4),
            (-6, 8),
            (-6, 0),
            (-9, 6),
            (1, -6),
            (-4, 6),
            (13, -1),
            (-10, 5),
            (4, -15),
            (5, -7),
            (-15, 14),
            (8, -14),
            (-15, 10),
            (1, -2),
            (9, 7),
            (7, 7),
            (2, 0),
            (-7, -4),
            (-11, 9),
            (16, -5),
            (-4, 9),
            (-10, 16),
            (-15, 11),
            (3, -6),
            (6, 10),
            (-2, -9),
            (-1, 11),
            (-10, -3),
            (12, -15),
            (-1, 16),
            (-15, 7),
            (-13, 8),
            (1, 2),
            (-16, 15),
            (8, 2),
            (14, 1),
            (-2, -2),
            (-10, 8),
            (14, -14),
            (15, -9),
            (0, 10),
            (7, 2),
            (4, -4),
            (5, -14),
            (0, 0),
            (15, -4),
            (9, -9),
            (1, 8),
            (6, -7),
            (9, -5),
            (16, -10),
            (-7, 16),
            (4, -11),
            (15, -11),
            (-13, -1),
            (1, 9),
            (3, 8),
            (6, -3),
            (-13, 13),
            (-8, 15),
            (-1, -14),
            (0, 8),
            (9, -6),
            (7, 0),
            (6, 3),
            (14, 2),
            (1, 7),
            (-13, 6),
            (-4, 1),
            (-3, -11),
            (15, -12),
            (8, -16),
            (2, -9),
            (2, 13),
            (-4, -5),
            (9, 1),
            (10, -13),
            (-2, 9),
            (10, -7),
            (-12, -3),
            (-3, 5),
            (-11, 0),
            (-2, -8),
            (-15, 2),
            (-2, -13),
            (-12, 3),
            (-4, 13),
            (4, 4),
            (13, -15),
            (-8, -2),
            (-4, 2),
            (12, -6),
            (16, -8),
            (-2, 13),
            (-11, -1),
            (-6, -3),
            (-12, 11),
            (-12, 6),
            (10, 1),
            (-8, -1),
            (-9, 8),
            (7, -7),
            (4, 6),
            (-14, 5),
            (0, 3),
            (7, -12),
            (0, 2),
            (-8, 12),
            (4, 3),
            (12, 2),
            (6, -15),
            (6, 1),
            (2, 1),
            (8, 5),
            (-4, -2),
            (16, -1),
            (-14, 7),
            (2, 12),
            (1, -7),
            (-3, -5),
            (2, -14),
            (2, 4),
            (9, -16),
            (10, -8),
            (9, -7),
            (-6, -5),
            (13, -4),
            (10, -3),
            (-3, 12),
            (-8, 8),
            (0, 9),
            (-7, 0),
            (-12, -2),
            (2, 6),
            (-8, 13),
            (3, 3),
            (-5, -9),
            (-11, 7),
            (-10, 4),
            (-13, 12),
            (4, -9),
            (10, -11),
            (-4, -4),
            (-11, -2),
            (-9, 9),
            (3, -9),
            (-14, 3),
            (15, -15),
            (-11, 13),
            (8, -5),
            (5, -9),
            (-9, 12),
            (-2, 3),
            (-6, 2),
            (9, 2),
            (-7, -8),
            (-11, -5),
            (6, -14),
            (7, 5),
            (-6, -6),
            (6, 7),
            (8, -3),
            (-2, 4),
            (-10, 13),
            (-1, 15),
            (12, -9),
            (-1, 9),
            (-8, -7),
            (-13, 9),
            (7, 3),
            (3, 9),
            (6, 5),
            (-2, 2),
            (5, 5),
            (14, 0),
            (9, -15),
            (16, -4),
            (-7, -7),
            (-1, -9),
            (13, 1),
            (-1, -15),
            (-1, -3),
            (10, -4),
            (2, 5),
            (-16, 2),
            (5, 1),
            (-16, 10),
            (0, 11),
            (-6, 5),
            (4, -12),
            (-9, -5),
            (13, 0),
            (-3, -4),
            (3, 5),
            (0, -16),
            (-2, 5),
            (13, -12),
            (-14, 11),
            (-10, -6),
            (-6, 12),
            (-5, 5),
            (11, -12),
            (-15, 9),
            (-5, 14),
            (-10, 1),
            (3, 13),
            (5, -13),
            (-1, 13),
            (16, -16),
            (-9, 1),
            (-5, 4),
            (8, 4),
            (-4, 15),
            (11, -10),
            (1, 3),
            (3, 11),
            (-3, -13),
            (7, 8),
            (-2, -14),
            (-4, -6),
            (-5, -4),
            (-16, 16),
            (9, -4),
            (-11, 14),
            (3, -4),
            (3, 0),
            (11, 0),
            (1, 12),
            (-7, 13),
            (-11, 11),
            (-15, 1),
            (3, -12),
            (14, -7),
        ]
    }
)  # if something's not in the grid, it defaults to 0
print(len(grid))


def nblack(g):
    return sum(1 for (k, v) in g.items() if v)


# print(nblack(grid))

import numpy as np


def frontier(g):
    for (x, y), v in g.items():
        yield (x, y), v
        if v:
            for neighbour in [
                (x + 1, y),
                (x - 1, y),
                (x, y + 1),
                (x - 1, y + 1),
                (x + 1, y - 1),
                (x, y - 1),
            ]:
                if neighbour in g:
                    continue
                yield neighbour, False


def nbcount(grid, x, y):
    return sum(
        1
        for neighbour in [
            (x + 1, y),
            (x - 1, y),
            (x, y + 1),
            (x - 1, y + 1),
            (x + 1, y - 1),
            (x, y - 1),
        ]
        if neighbour in grid and grid[neighbour]
    )


from copy import deepcopy
from more_itertools import unique_everseen

for i in range(100):
    grid_ = deepcopy(grid)
    for (x, y), is_black in unique_everseen(frontier(grid_)):
        nbs = nbcount(grid_, x, y)
        if is_black and (nbs == 0 or nbs > 2):
            grid[(x, y)] = False
        elif (not is_black) and nbs == 2:
            grid[(x, y)] = True
    print(i, len([k for (k, v) in grid.items() if v]))